// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  serialNo  String @unique
  name      String
  imageURL  String
  price     Float    // TODO: this could be better modeled considering currency
  quantity  Int
  categoryId Int     // This field acts as the foreign key
  category   Category @relation(fields: [categoryId], references: [id])
  items     OrderItem[] 
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[] // Implicitly creates a one-to-many relation with Product
}

model User {
  id        Int      @id @default(autoincrement()) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  surname   String
  email     String @unique
  orders    Order[]
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User @relation(fields: [userId], references: [id])  
  items     OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  productId Int 
  product   Product @relation(fields: [productId], references: [id]) 
  quantity  Int
  updatedAt DateTime @updatedAt
  orderId   Int
  order     Order @relation(fields: [orderId], references: [id])
}